import "./globals.css";
import type { Metadata } from "next";
import Link from "next/link";
import { Control } from "./control";

export const metadata: Metadata = {
  title: "Nextjs 13",
  description: "Generated by hjy",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const resp = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/topics`, {
    cache: "no-cache",
  });
  const topics = await resp.json();
  console.log(topics);

  return (
    <html>
      <body>
        <h1>
          <a href="/">WEB</a>
        </h1>
        <ol>
          {topics.map((topic: { id: number; title: string }) => {
            return (
              <li key={topic.id}>
                <Link href={`/read/${topic.id}`}>{topic.title}</Link>
              </li>
            );
          })}
        </ol>
        {children}
        {/* server component 내에서는 현재 동적 라우팅의 값([id])을 layout 안에서는 알 수 없다.
        useParams를 사용해야 하는데 useParams는 client component다.
        app/layout.js 전체를 client component로 전환해도 됩니다만, 
        server component의 이점을 포기하기는 싫기 때문에
        client component의 기능이 필요한 부분만 별도의 컴포넌트로 분리했다.  */}
        <Control />
      </body>
    </html>
  );
}
