import "./globals.css";
import type { Metadata } from "next";
import Link from "next/link";
import { Control } from "./Control";
import Header from "./Header";
import { fetchPostsList } from "@/api/posts/PostsListApi";

export const metadata: Metadata = {
  title: "Nextjs 13",
  description: "Generated by hjy",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const posts = await fetchPostsList();

  return (
    <html>
      <body>
        {/* @ts-expect-error Async Server Component */}
        <Header />
        {children}
        {/* server component 내에서는 현재 동적 라우팅의 값([id])을 layout 안에서는 알 수 없다.
        useParams를 사용해야 하는데 useParams는 client component다.
        app/layout.js 전체를 client component로 전환해도 됩니다만, 
        server component의 이점을 포기하기는 싫기 때문에
        client component의 기능이 필요한 부분만 별도의 컴포넌트로 분리했다.  */}
        <Control />
        <div className="min-w-[1200px] px-[10px]">
          {posts?.map((el: { id: string; title: string }, idx: number) => {
            return (
              <div
                className={`border-x ${idx === 0 ? "border-t" : ""}`}
                key={el.id}
              >
                <Link
                  className="flex items-center border-b h-[50px] px-[10px]"
                  href={`/read/${el.id}`}
                >
                  {el.title}
                </Link>
              </div>
            );
          })}
        </div>
        <div className="flex justify-center items-center cursor-pointer w-[60px] h-[40px] text-white bg-orange-500 rounded ml-[10px] mt-[10px]">
          <Link href={"/create"}>글쓰기</Link>
        </div>
      </body>
    </html>
  );
}
